"""empty message

Revision ID: 7d1b1974b13f
Revises: 
Create Date: 2020-12-06 13:49:56.479765

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7d1b1974b13f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('uq_items_name'), 'items', ['name'])
    op.drop_constraint('items_name_key', 'items', type_='unique')
    op.create_unique_constraint(op.f('uq_stores_name'), 'stores', ['name'])
    op.drop_constraint('stores_name_key', 'stores', type_='unique')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=80),
               nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=80),
               nullable=True)
    op.create_unique_constraint(op.f('uq_users_username'), 'users', ['username'])
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.drop_column('users', 'age')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_constraint(op.f('uq_users_username'), 'users', type_='unique')
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=80),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=80),
               nullable=False)
    op.create_unique_constraint('stores_name_key', 'stores', ['name'])
    op.drop_constraint(op.f('uq_stores_name'), 'stores', type_='unique')
    op.create_unique_constraint('items_name_key', 'items', ['name'])
    op.drop_constraint(op.f('uq_items_name'), 'items', type_='unique')
    # ### end Alembic commands ###
